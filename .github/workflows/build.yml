
name: build

on:
  schedule:
    - cron: "0 0 * * 0"
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        run: sh build_macos.sh

      - uses: actions/upload-artifact@v4
        with:
          name: artifacts_macos
          path: |
            artifacts/x64.zip
            artifacts/arm64.zip
            artifacts/fat.zip

  build-ios:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        run: sh build_ios.sh

      - uses: actions/upload-artifact@v4
        with:
          name: artifacts_ios
          path: |
            artifacts/libEGL.xcframework.zip
            artifacts/libGLESv2.xcframework.zip
            artifacts/ios_headers.zip

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # # Comment/uncomment depending on presence of required SDK in runner's image
      # - name: Install Windows SDK
      #   shell: cmd
      #   run: |
      #     "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vs_installer.exe" modify --installPath "C:\Program Files\Microsoft Visual Studio\2022\Enterprise" --quiet --force --norestart --add Microsoft.VisualStudio.Component.Windows11SDK.26100

      - name: Build
        run: ./build_windows.ps1

      - uses: actions/upload-artifact@v4
        with:
          name: artifacts_windows
          path: |
            artifacts/x64.zip
  
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: [build-macos, build-ios, build-windows]
    steps:

    - uses: actions/download-artifact@v4
      with: 
        name: artifacts_macos
        path: artifacts_macos

    - uses: actions/download-artifact@v4
      with: 
        name: artifacts_ios
        path: artifacts_ios

    - uses: actions/download-artifact@v4
      with: 
        name: artifacts_windows
        path: artifacts_windows
      
    - name: make artifacts
      run: |
        mkdir artifacts
        cp artifacts_windows/x64.zip artifacts/windows_x64.zip
        cp artifacts_macos/x64.zip artifacts/macos_x64.zip
        cp artifacts_macos/arm64.zip artifacts/macos_arm64.zip
        cp artifacts_macos/fat.zip artifacts/macos_fat.zip
        cp artifacts_ios/libEGL.xcframework.zip artifacts/ios_libEGL.xcframework.zip
        cp artifacts_ios/libGLESv2.xcframework.zip artifacts/ios_libGLESv2.xcframework.zip
        cp artifacts_ios/ios_headers.zip artifacts/ios_headers.zip

    - uses: ncipollo/release-action@v1
      with:
        artifacts: "artifacts/*.zip"
        name:  Continuous build
        allowUpdates: true
        tag: latest_build
        commit: ${{ github.ref }}
        makeLatest: true
